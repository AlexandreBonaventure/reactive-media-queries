{"version":3,"file":"index.mjs","sources":["../src/index.ts"],"sourcesContent":["\ninterface BreakpointsOptions {\n  [key: string]: number;\n}\ninterface MediaQueryConfig {\n  [key: string]: string;\n}\n\nfunction convertBreakpointsToMediaQueries(breakpoints: BreakpointsOptions): MediaQueryConfig {\n  const keys = Object.keys(breakpoints)\n  const values = keys.map(key => breakpoints[key])\n  const breakpointValues = [0, ...values.slice(0, -1)]\n  const mediaQueries = breakpointValues.reduce((sum, value, index) => {\n    const isLast = index === keys.length - 1\n    const minWidth = `${value}px`\n    const maxWidth = !isLast ? `${breakpointValues[index + 1] - 1}px` : ''\n    const mediaQuery: string = `(min-width: ${minWidth})` + (maxWidth && ` and (max-width: ${maxWidth})`)\n    return Object.assign(sum, {\n      [keys[index]]: mediaQuery,\n    })\n  }, {})\n  return mediaQueries\n}\n\nfunction subscribeToMediaQuery(id: string, mediaQuery: string, callback: (id: string) => any): () => any {\n  const mql = window.matchMedia(mediaQuery)\n  const cb = ({ matches }) => {\n    if (matches) callback(id)\n  }\n  mql.addListener(cb) // subscribing\n  cb(mql) // initial trigger\n  return () => mql.removeListener(cb) // return unsubscribtion\n}\n\n\nclass ReactiveMediaQueries {\n  teardowns: Set<() => any> = new Set()\n  constructor(breakpoints: BreakpointsOptions, callback: (id: string) => any) {\n    const mediaQueriesStrings = convertBreakpointsToMediaQueries(breakpoints)\n    for (const key in mediaQueriesStrings) {\n      const mediaQuery = mediaQueriesStrings[key]\n      const teardown = subscribeToMediaQuery(key, mediaQuery, (id) => {\n        callback(id)\n      })\n      this.teardowns.add(teardown)\n    }\n  }\n  destroy() {\n    for (const teardown of this.teardowns) {\n      teardown()\n    }\n  }\n}\n\nexport default ReactiveMediaQueries\n\n"],"names":["subscribeToMediaQuery","id","mediaQuery","callback","mql","window","matchMedia","cb","ref","addListener","removeListener","ReactiveMediaQueries","constructor","breakpoints","Set","mediaQueriesStrings","keys","Object","values","map","key","breakpointValues","slice","reduce","sum","value","index","maxWidth","length","assign","convertBreakpointsToMediaQueries","const","teardown","teardowns","add","destroy","this"],"mappings":"AAwBA,SAASA,EAAsBC,EAAYC,EAAoBC,OACvDC,EAAMC,OAAOC,WAAWJ,GACxBK,WAAMC,cACGL,EAASF,WAExBG,EAAIK,YAAYF,GAChBA,EAAGH,qBACUA,EAAIM,eAAeH,IAIlC,IAAMI,EAEJC,SAAYC,EAAiCV,kBADjB,IAAIW,QAExBC,EA9BV,SAA0CF,OAClCG,EAAOC,OAAOD,KAAKH,GACnBK,EAASF,EAAKG,aAAIC,UAAOP,EAAYO,KACrCC,EAAmB,CAAC,UAAMH,EAAOI,MAAM,GAAI,WAC5BD,EAAiBE,gBAAQC,EAAKC,EAAOC,SAGlDC,EAFSD,IAAUV,EAAKY,OAAS,EAE6B,GAAtCP,EAAiBK,EAAQ,GAAK,cAErDT,OAAOY,OAAOL,MAAK,IACvBR,EAAKU,4BAFiDC,uBAAgCA,YAIxF,IAkB2BG,CAAiCjB,OACxDkB,IAAMX,KAAOL,EAAqB,KAE/BiB,EAAWhC,EAAsBoB,EADpBL,EAAoBK,YACkBnB,GACvDE,EAASF,UAENgC,UAAUC,IAAIF,KAGvBG,YAAAA,uBACO,UAAkBC,KAAKH,2BAC1BD"}